syntax = "proto3";

package pb.v1;

option go_package = "github.com/kkiling/photo-library/backend/sync_photos_server/pkg/common/gen/pbv1";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

service PhotosService {
  rpc GetPhotoGroups(GetPhotoGroupsRequest) returns (PaginatedPhotoGroups) {
    option (google.api.http) = {
      get: "/v1/photos/groups";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Получение списка групп фотографий";
    };
  };
  rpc GetPhotoGroup(GetPhotoGroupRequest) returns (PhotoGroupData) {
    option (google.api.http) = {
      get: "/v1/photos/groups/{group_id}";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Получение группы фотографий";
    };
  };
  rpc SetMainPhotoGroup(SetMainPhotoGroupRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/photos/groups/main_photo";
      body: "*";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Изменить главную фотографию группы";
    };
  };
  // Повернуть фотографию 0 -90 90 180
  // Удалить тег фотографии
  // Добавить тег фотографии (category_id, name тега)
}

message PhotoPreview {
  string src = 1;
  int32 width = 2;
  int32 height = 3;
  int32 size = 4;
}

message PhotoWithPreviews {
  string id = 1;
  string src = 2;
  int32 width = 3;
  int32 height = 4;
  repeated PhotoPreview previews = 5;
}

message PhotoTag {
  string id = 1;
  string name = 2;
  string type = 3;
  string color = 4;
}

message Geo {
  double Latitude = 1;
  double Longitude = 2;
}

message Metadata {
  optional string model_info = 1;
  int32 size_bytes = 2;
  int32 width_pixel = 3;
  int32 height_pixel = 4;
  google.protobuf.Timestamp data_time = 5;
  google.protobuf.Timestamp update_at = 6;
  Geo geo = 7;
}

message PhotoGroup {
  string id = 1;
  PhotoWithPreviews main_photo = 2;
  int32 photos_count = 3;
}

message PhotoGroupData {
  string id = 1;
  PhotoWithPreviews main_photo = 2;
  int32 photos_count = 3;
  repeated PhotoWithPreviews photos = 4;
  Metadata meta_data = 5;
  repeated PhotoTag tags = 6;
}

//
message GetPhotoGroupsRequest {
  int32 page = 1;
  int32 per_page = 2;
}

message PaginatedPhotoGroups {
  repeated PhotoGroup items = 1;
  int32 total_items = 2;
}

//
message GetPhotoGroupRequest {
  string group_id = 1;
}

//
message SetMainPhotoGroupRequest {
  string main_photo_id = 1;
}