syntax = "proto3";

package pb.v1;

option go_package = "github.com/kkiling/photo-library/backend/sync_photos_server/pkg/common/gen/pbv1";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/timestamp.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Photo library API";
    version: "0.1";
  };
  schemes: HTTP;
  security_definitions: {
    security: {
      key: "Bearer"
      value: {
        type: TYPE_API_KEY;
        in: IN_HEADER;
        name: "Authorization"
      }
    };
  };
  host: "localhost:8080";
  consumes: "application/json";
  produces: "application/json";
};

service PhotosService {
  rpc GetPhotoGroups(GetPhotoGroupsRequest) returns (GetPhotoGroupsResponse) {
    option (google.api.http) = {
      post: "/v1/photos/groups";
      body: "*";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: ["photo"]
      summary: "Получение списка групп фотографий";
    };
  };
}

message GetPhotoGroupsRequest {
  int32 offset = 1;
  int32 limit = 2;
}

message Photo {
  string id = 1;
  string url = 2;
}

message PhotoGroup {
  string id = 1;
  Photo main_photo = 2;
  repeated Photo photos = 3;
}

message GetPhotoGroupsResponse {
  repeated PhotoGroup items = 1;
  int32 total_items = 2;
}